/* ppi.css */

/* General Utility Classes (often generated by Tailwind or provided by Flowbite's base CSS) */
.hidden {
    display: none !important; /* Added !important to ensure it overrides other display rules */
}
.flex {
    display: flex !important; /* Added !important to ensure it overrides other display rules */
}

/* Scrollbar styles */
::-webkit-scrollbar {
    width: 0px; /* hilang sama sekali */
    background: transparent;
}

html, body {
    scrollbar-width: none; /* hilang di Firefox */
    -ms-overflow-style: none; /* hilang di Edge lama/IE */
}

/* Tab content and button styles */
.tab-content {
    display: none;
}

.tab-content:not(.hidden) {
    display: block;
}

.active-tab {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.tab-button:hover {
    transform: translateY(-1px);
    transition: all 0.2s ease;
}

/* Pulse animation */
.pulse-animation {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.4); }
    70% { box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); }
    100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }
}

/* Checklist item hover effect */
.checklist-item:hover {
    background-color: #f8fafc;
    transform: translateX(2px);
    transition: all 0.2s ease;
}

/* Pagination controls */
.pagination-controls button,
.pagination-controls a {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border: 1px solid #d1d5db;
    font-size: 0.875rem;
    font-weight: 500;
    border-radius: 0.375rem;
    color: #374151;
    background-color: white;
}

.pagination-controls button:hover,
.pagination-controls a:hover {
    background-color: #f9fafb;
}

.pagination-controls a.active {
    z-index: 10;
    background-color: #eff6ff;
    border-color: #3b82f6;
    color: #2563eb;
}


/* --- Modal styles (Consolidated from your inline <style> and targeting conflicts) --- */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7) !important; /* Made background slightly darker and added !important */
    justify-content: center;
    align-items: center;
    z-index: 1050 !important; /* Increased z-index, and added !important */

    visibility: hidden;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;
}

/* When .modal does NOT have the .hidden class, make it visible */
.modal:not(.hidden) {
    visibility: visible;
    pointer-events: auto;
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
}

.modal.flex {
    display: flex !important;
}

/* Ensure that when your JS adds 'flex', it overrides 'display: none' from 'hidden' */
/* Your JS showDetailModal already adds 'flex' and removes 'hidden'.
   The `!important` on `display: flex` will ensure it takes precedence. */
/* If `app.css` also defines `.modal` with `display: grid`, this will fix it. */
.modal.flex {
    display: flex !important;
}


.modal-content {
    background-color: white;
    color: black;
    padding: 2rem;
    border-radius: 0.5rem;
    max-width: 800px; /* Adjust as needed */
    width: 90%;
    max-height: 90%;
    overflow-y: auto;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    position: relative; /* For the close button positioning */
}

.modal-close-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #6B7280; /* text-gray-500 */
}

/* Style for the dedicated photo modal */
#photoModal .modal-content {
    background-color: black; /* Dark background for image */
    padding: 0.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

#photoModal img {
    max-width: 100%;
    max-height: 90vh; /* Adjust max height to fit screen */
    object-fit: contain; /* Ensures image fits within bounds without cropping */
}